// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/pb/calculator.proto

package calpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	Num1                 int32    `protobuf:"varint,1,opt,name=num1,proto3" json:"num1,omitempty"`
	Num2                 int32    `protobuf:"varint,2,opt,name=num2,proto3" json:"num2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetNum1() int32 {
	if m != nil {
		return m.Num1
	}
	return 0
}

func (m *SumRequest) GetNum2() int32 {
	if m != nil {
		return m.Num2
	}
	return 0
}

type SumResponse struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type PrimeRequest struct {
	PrimeNum             int64    `protobuf:"varint,1,opt,name=primeNum,proto3" json:"primeNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeRequest) Reset()         { *m = PrimeRequest{} }
func (m *PrimeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeRequest) ProtoMessage()    {}
func (*PrimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{2}
}

func (m *PrimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeRequest.Unmarshal(m, b)
}
func (m *PrimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeRequest.Merge(m, src)
}
func (m *PrimeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeRequest.Size(m)
}
func (m *PrimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeRequest proto.InternalMessageInfo

func (m *PrimeRequest) GetPrimeNum() int64 {
	if m != nil {
		return m.PrimeNum
	}
	return 0
}

type PrimeResponse struct {
	PrimeResult          int64    `protobuf:"varint,1,opt,name=primeResult,proto3" json:"primeResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeResponse) Reset()         { *m = PrimeResponse{} }
func (m *PrimeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeResponse) ProtoMessage()    {}
func (*PrimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{3}
}

func (m *PrimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeResponse.Unmarshal(m, b)
}
func (m *PrimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeResponse.Merge(m, src)
}
func (m *PrimeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeResponse.Size(m)
}
func (m *PrimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeResponse proto.InternalMessageInfo

func (m *PrimeResponse) GetPrimeResult() int64 {
	if m != nil {
		return m.PrimeResult
	}
	return 0
}

type AverageRequest struct {
	AvgNums              int64    `protobuf:"varint,1,opt,name=avgNums,proto3" json:"avgNums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{4}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetAvgNums() int64 {
	if m != nil {
		return m.AvgNums
	}
	return 0
}

type AverageResponse struct {
	AvgRes               float32  `protobuf:"fixed32,1,opt,name=avgRes,proto3" json:"avgRes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97762fb4fc613a37, []int{5}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetAvgRes() float32 {
	if m != nil {
		return m.AvgRes
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*PrimeRequest)(nil), "calculator.PrimeRequest")
	proto.RegisterType((*PrimeResponse)(nil), "calculator.PrimeResponse")
	proto.RegisterType((*AverageRequest)(nil), "calculator.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calculator.AverageResponse")
}

func init() { proto.RegisterFile("calculator/pb/calculator.proto", fileDescriptor_97762fb4fc613a37) }

var fileDescriptor_97762fb4fc613a37 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x4e, 0xb3, 0x40,
	0x14, 0xc5, 0x3f, 0xda, 0xaf, 0xd4, 0x5c, 0xfc, 0x97, 0xbb, 0xa8, 0x88, 0x89, 0x36, 0xb3, 0xaa,
	0x5d, 0xb4, 0x16, 0xdd, 0xb9, 0xaa, 0x46, 0xbb, 0x6b, 0x1a, 0xba, 0x73, 0x37, 0x90, 0x09, 0x31,
	0x61, 0xca, 0x08, 0x33, 0x3c, 0xab, 0x8f, 0x63, 0x4a, 0x2f, 0x30, 0xc6, 0xee, 0xe6, 0x9c, 0xf9,
	0xcd, 0xb9, 0xdc, 0x13, 0xe0, 0x36, 0xe1, 0x59, 0x62, 0x32, 0xae, 0xf3, 0x62, 0xae, 0xe2, 0x79,
	0xa7, 0x66, 0xaa, 0xc8, 0x75, 0x8e, 0xd0, 0x39, 0xec, 0x09, 0x60, 0x6b, 0x64, 0x24, 0xbe, 0x8c,
	0x28, 0x35, 0x22, 0xfc, 0xdf, 0x19, 0xb9, 0xf0, 0x9d, 0xb1, 0x33, 0x19, 0x44, 0xf5, 0x99, 0xbc,
	0xd0, 0xef, 0xb5, 0x5e, 0xc8, 0xee, 0xc0, 0xab, 0x5f, 0x95, 0x2a, 0xdf, 0x95, 0x02, 0x2f, 0xa1,
	0x5f, 0x1a, 0x49, 0xaf, 0xf6, 0x47, 0x36, 0x85, 0xd3, 0x4d, 0xf1, 0x29, 0x45, 0x13, 0x1c, 0xc0,
	0x89, 0xda, 0xeb, 0x35, 0x61, 0xfd, 0xa8, 0xd5, 0x6c, 0x01, 0x67, 0xc4, 0x52, 0xdc, 0x18, 0x3c,
	0x45, 0x86, 0xc9, 0x34, 0xf1, 0xb6, 0xc5, 0xa6, 0x70, 0xbe, 0xac, 0x44, 0xc1, 0xd3, 0x76, 0x80,
	0x0f, 0x43, 0x5e, 0xa5, 0x6b, 0x23, 0x4b, 0xe2, 0x1b, 0xc9, 0xee, 0xe1, 0xa2, 0x65, 0x69, 0xc0,
	0x08, 0x5c, 0x5e, 0xa5, 0x91, 0x38, 0xb0, 0xbd, 0x88, 0x54, 0xf8, 0xed, 0x00, 0xbc, 0xb6, 0xdd,
	0xe0, 0x33, 0xb8, 0x2b, 0xa1, 0xb7, 0x46, 0xe2, 0x68, 0x66, 0x95, 0xd8, 0xf5, 0x15, 0x5c, 0xfd,
	0xf1, 0x0f, 0x13, 0xd8, 0x3f, 0x7c, 0x07, 0x6f, 0x25, 0xf4, 0x86, 0x96, 0x44, 0xdf, 0x26, 0xed,
	0x6a, 0x82, 0xeb, 0x23, 0x37, 0x4d, 0xca, 0x83, 0x83, 0x6f, 0xf5, 0x47, 0x2c, 0xab, 0x14, 0x03,
	0x1b, 0xfc, 0xbd, 0x7e, 0x70, 0x73, 0xf4, 0xae, 0x89, 0x99, 0x38, 0x2f, 0xc3, 0x8f, 0x41, 0xc2,
	0x33, 0x15, 0xc7, 0x6e, 0xfd, 0x0f, 0x3c, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x19, 0x6a, 0x8e,
	0xe9, 0x25, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	GetSum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	GetPrimeNum(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (Calculator_GetPrimeNumClient, error)
	GetAvg(ctx context.Context, opts ...grpc.CallOption) (Calculator_GetAvgClient, error)
}

type calculatorClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorClient(cc *grpc.ClientConn) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) GetSum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.Calculator/GetSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) GetPrimeNum(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (Calculator_GetPrimeNumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[0], "/calculator.Calculator/GetPrimeNum", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorGetPrimeNumClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Calculator_GetPrimeNumClient interface {
	Recv() (*PrimeResponse, error)
	grpc.ClientStream
}

type calculatorGetPrimeNumClient struct {
	grpc.ClientStream
}

func (x *calculatorGetPrimeNumClient) Recv() (*PrimeResponse, error) {
	m := new(PrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorClient) GetAvg(ctx context.Context, opts ...grpc.CallOption) (Calculator_GetAvgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[1], "/calculator.Calculator/GetAvg", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorGetAvgClient{stream}
	return x, nil
}

type Calculator_GetAvgClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type calculatorGetAvgClient struct {
	grpc.ClientStream
}

func (x *calculatorGetAvgClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorGetAvgClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	GetSum(context.Context, *SumRequest) (*SumResponse, error)
	GetPrimeNum(*PrimeRequest, Calculator_GetPrimeNumServer) error
	GetAvg(Calculator_GetAvgServer) error
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_GetSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).GetSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.Calculator/GetSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).GetSum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_GetPrimeNum_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServer).GetPrimeNum(m, &calculatorGetPrimeNumServer{stream})
}

type Calculator_GetPrimeNumServer interface {
	Send(*PrimeResponse) error
	grpc.ServerStream
}

type calculatorGetPrimeNumServer struct {
	grpc.ServerStream
}

func (x *calculatorGetPrimeNumServer) Send(m *PrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Calculator_GetAvg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServer).GetAvg(&calculatorGetAvgServer{stream})
}

type Calculator_GetAvgServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type calculatorGetAvgServer struct {
	grpc.ServerStream
}

func (x *calculatorGetAvgServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorGetAvgServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.Calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSum",
			Handler:    _Calculator_GetSum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPrimeNum",
			Handler:       _Calculator_GetPrimeNum_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetAvg",
			Handler:       _Calculator_GetAvg_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/pb/calculator.proto",
}
